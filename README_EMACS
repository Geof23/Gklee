These are instructions for using GKLEE with the Emacs extension, gklee-mode.el.

This extension has been tested with Emacs 23.1.1.

Here are the steps required:

First, you must add this line to your .emacs (the emacs configuration file
that is normally located in your home directory):

(load-file "[gklee top level directory]/gklee-mode.el")

Second, you must have Gklee configured properly to run, including the 
necessary environment variables, as the Emacs extension depends on these
to run.  You can find instructions for this in [gklee top level directory]/
README.

Finally, you may run emacs, and load a CUDA source code file (c/cpp) in an
emacs buffer for editing.

Once you have loaded your CUDA source code, you can start GKLEE.

By hitting the key sequence 'M-x gklee-run', if everything is configured
properly, your program will be compiled with LLVM into bytecode.  

Next, assuming that the compilation was successful (you can see the 
results of compilation in the *gklee-compile* buffer),
gklee-emacs will analyze the compiled program with Gklee, displaying
the results in the '*gklee-run*' emacs buffer.  

A summary will be displayed at the top of this buffer, and output
for each of the generated tests will be shown below this.

By right-clicking on any one of the test summaries, a trace window
will be opened showing the path that was explored by Gklee.

You may click on any of these lines, and Emacs will direct you to 
the source line related to this trace line.  Also, you may navigate
through the trace buffers with the arrow keys, and press 'enter'
on the line you would like to explore in your c/c++ source code.

Questions may be directed to geof.sawaya@utah.edu.

***

Extra Info:

By clicking C-x C-b, you may see a list of buffers that are used by
emacs-gklee (here are a couple of them described):

*gklee-compile-debug*: this buffer displays all output from the auto compilation
*gklee-run-debug*: this buffer shows you all the output generated by Gklee
		   in its analysis run