======================= Build GKLEE ToolChain ===========================

1. Before you install the GKLEE toolchain, please ensure "flex" and "bison"
   are both installed in your Linux system.

2. In the 'Gklee' dir, and run the script 'BuildGklee'. 
   You will be asked to build Clang/LLVM and GKLEE with the 
   "Release" or "Debug" mode. This script is able to download 
   and build all necessary parts automatically.

======================= Set Environment Variables =========================

1. After you finish the instalation, please customize the environment variables
   in the following two ways:
 
   -- Add the following lines to your /home/[username]/.bashrc file
   -- Create an environment file including the following lines

   export FLA_KLEE_HOME_DIR=/Path/To/Gklee
   export PATH=$FLA_KLEE_HOME_DIR/bin:$FLA_KLEE_HOME_DIR/Gklee/Release+Asserts/bin:$FLA_KLEE_HOME_DIR/llvm-inst/Release+Asserts/bin:$PATH

   NOTE: The above environment variables are present under the "Release" building mode, you should adjust "Release" to "Debug" accordingly
         if you build GKLEE under the "Debug" mode.

======================= Run GKLEE =========================

After building GKLEE and setting environment variables properly, you could run GKLEE.

1. Compile your CUDA programs into LLVM bytecode with the command: 

   gklee-nvcc xxx.cu [-o executable] [other options used in nvcc ...] 
   
   NOTE: if you do not specify a executable name, gklee-nvcc will use the prefix of the CUDA program 
   as the default name

2. Run your program with GKLEE command

   gklee executable [Normal Mode] 
   gklee --symbolic-config executable [Parametric Flow Mode] 

3. The test cases will be generated in the same dir where you execute gklee, 
   and appear as 'klee-out-[number]' and 'klee-last'.
